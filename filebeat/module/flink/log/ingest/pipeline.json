{
  "description": "Pipeline for parsing Flink log messages in plaintext format.",
  "processors": [
    {
        "grok": {
            "field": "message",
            "pattern_definitions": {
                "GREEDYMULTILINE": "(.|\n)*",
                "LOG_HEADER": "\\[%{TIMESTAMP_ISO8601:flink.log.timestamp}\\].(%{SPACE})?(\\[%{DATA:flink.log.thread}\\])?(%{SPACE})?%{LOGLEVEL:flink.log.level}%{SPACE}%{JAVACLASS:flink.log.class}(%{SPACE})?"
            },
            "patterns": [
                "%{LOG_HEADER}%{SPACE}%{GREEDYMULTILINE:message}"
            ]
        }
    },
    {
        "date": {
            "if": "ctx.event.timezone == null",
            "field": "flink.log.timestamp",
            "target_field": "@timestamp",
            "formats": [
                "yyyy-MM-dd HH:mm:ss,SSS"
            ],
            "on_failure": [{"append": {"field": "error.message", "value": "{{ _ingest.on_failure_message }}"}}]
        }
    },
    {
        "date": {
            "if": "ctx.event.timezone != null",
            "field": "flink.log.timestamp",
            "target_field": "@timestamp",
            "formats": [
                "yyyy-MM-dd HH:mm:ss,SSS"
            ],
            "timezone": "{{ event.timezone }}",
            "on_failure": [{"append": {"field": "error.message", "value": "{{ _ingest.on_failure_message }}"}}]
        }
    }
  ],
  "on_failure" : [{
    "set" : {
      "field" : "error.message",
      "value" : "{{ _ingest.on_failure_message }}"
    }
  }]
}
